openapi: 3.0.3
info:
  title: Central Operations API
  version: 0.1.0
  license:
    name: MIT
    url: 'https://opensource.org/licenses/MIT'
  description: Component responsible for central operations control in the BÃ¼rokratt network.
servers:
  - url: 'http://localhost:3000'
paths:
  /admin/participants:
    get:
      summary: Get endpoint for getting an array of participants
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Participant'
      operationId: get-participants
      description: (For Admin) Get all participants
      tags:
        - admin/participants
    post:
      summary: ''
      operationId: post-participants
      responses:
        '201':
          description: Created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Participant'
      description: (For Admin) Create a new participant
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Participant'
        description: ''
      tags:
        - admin/participants
    parameters: []
  /admin/institutions:
    get:
      summary: Get endpoint for getting an array of institutions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Institution'
      operationId: get-private-api-institutions
      description: (For Admin) Get all institutions
      tags:
        - admin/institutions
    post:
      summary: Post endpoint for adding new institutions
      operationId: post-private-api-institutions
      responses:
        '201':
          description: Created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Institution'
      description: (For Admin) Create a new institution
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Institution'
      tags:
        - admin/institutions
    parameters: [ ]
  '/admin/participants/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: Participant ID
    delete:
      summary: 'endpoint to delete participant based on id'
      operationId: delete-admin-participant
      responses:
        '204':
          description: No Content
      description: (For Admin) Delete participant by id
      tags:
        - admin/participants
    put:
      summary: 'endpoint for updating the participant based on the id'
      operationId: put-admin-participant
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Participant'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Participant'
      description: (For Admin) Update specific participant
      tags:
        - admin/participants
    get:
      summary: 'endpoint for getting the participant based on the id'
      operationId: get-admin-participant
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Participant'
      description: (For Admin) Get specific participant by id with sensitive info in payload (e.g. apiKey)
      tags:
        - admin/participants
  '/admin/institutions/{id}':
    get:
      summary: Get endpoint for getting a institution by id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Institution'
      operationId: get-private-api-institution
      description: (For Admin) Get specific institution by id
      tags:
        - admin/institutions
    put:
      summary: 'endpoint for updating the institution based on the id'
      operationId: put-admin-institution
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Institution'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Institution'
      description: (For Admin) Update specific institution
      tags:
        - admin/institutions
    delete:
      summary: 'endpoint to delete institution based on id'
      operationId: delete-admin-institution
      responses:
        '204':
          description: No Content
      description: (For Admin) Delete institution by id
      tags:
        - admin/institutions
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: Institution ID
  /participants:
    get:
      summary: Get endpoint for getting non-confidential participants
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PublicParticipant'
      operationId: get-public-api-participants
      parameters:
        - schema:
            type: string
          in: query
          name: type
          description: Participant type
        - schema:
            type: string
          in: query
          name: institutionId
          description: Institution ID
        - $ref: '#/components/parameters/X-Api-Key'
      description: (For Participants) Get all participants with sensitive info removed from payload
      tags:
        - participants
    parameters: [ ]
  /institutions:
    get:
      summary: Get endpoint for getting non-confidential institutions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PublicInstitution'
      operationId: get-public-api-institutions
      parameters:
        - $ref: '#/components/parameters/X-Api-Key'
      description: (For Participants) Get all institutions with sensitive info removed from payload
      tags:
        - institutions
    parameters: [ ]
components:
  schemas:
    Participant:
      title: Participant
      type: object
      description: ''
      properties:
        id:
          type: string
          format: uuid
          example: 141ee581-6d97-4845-968a-43f41464c677
          readOnly: true
        name:
          type: string
          example: NLib
          readOnly: false
        type:
          type: string
          enum:
            - Dmr
            - Chatbot
            - Classifier
          example: Chatbot
        institutionId:
          type: string
        host:
          type: string
          example: 'http://nlib.gov:12133'
        apiKey:
          type: string
      required:
        - id
        - type
        - institutionId
        - host
        - apiKey
    PublicParticipant:
      title: PublicParticipant
      type: object
      description: ''
      properties:
        id:
          type: string
          format: uuid
          example: 141ee581-6d97-4845-968a-43f41464c677
          readOnly: true
        name:
          type: string
          example: NLib
          readOnly: true
        type:
          type: string
          enum:
            - Dmr
            - Chatbot
            - Classifier
          example: Chatbot
        institutionId:
          type: string
        host:
          type: string
          example: 'http://nlib.gov:12133'
      required:
        - id
        - type
        - institutionId
        - host
    Institution:
      title: PublicInstitution
      type: object
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
        status:
          type: string
          enum:
            - Active
            - Disabled
      required:
        - id
        - name
        - status
    PublicInstitution:
      title: Institution
      type: object
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
        status:
          type: string
          enum:
            - Active
            - Disabled
      required:
        - id
        - name
        - status
  parameters:
    X-Api-Key:
      name: X-Api-Key
      in: header
      required: true
      schema:
        type: string
      description: Temporary solution to get started with authentication. Key is provided on registration.
tags:
  - name: admin/participants
    description: Participant management
  - name: admin/institutions
    description: Institution management
  - name: institutions
    description: Institutions queryable by Participants
  - name: participants
    description: Participants queryable by Participants
