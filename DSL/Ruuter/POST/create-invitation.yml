# TODO uncomment lines 2-5, use actual cookie from header for authentication.
# check_for_cookie:
#   switch:
#     - condition: ${incoming.headers == null || incoming.headers.cookie == null}
#       next: return_unauthorized

authenticate:
  template: templates/extract-token
  requestType: post
  headers:
    cookie: cookie #${incoming.headers.cookie}
  body:
    role: "ROLE_ADMINISTRATOR"
  result: permission

validate_permission:
  switch:
    - condition: ${permission}
      next: check_for_email
  next: return_unauthorized

check_for_email:
  switch:
    - condition: ${incoming.body == null || incoming.body.user_email == null}
      next: return_incorrect_request

set_email:
  assign:
    email: ${incoming.body.user_email}
  next: create_invitation

create_invitation:
  call: http.post
  args:
    url: http://resql:8087/create-invitation
    body: 
      user_email: ${email}
  result: post_result
  next: get_invitation_code

get_invitation_code:
  call: http.post
  args:
    url: http://resql:8087/get-invitation-code
    body:
      user_email: ${email}
  result: invitationCodes
  next: return_ok

return_ok:
  wrapper: false
  status: 200
  return: ${invitationCodes.response.body}
  next: end

return_incorrect_request:
  status: 400
  return: "User email is required"
  next: end

return_unauthorized:
  return: "error: unauthorized"
  status: 401
  next: end
