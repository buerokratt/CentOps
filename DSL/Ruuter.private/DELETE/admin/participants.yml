extractRequestData:
  assign:
    cookie: ${incoming.headers.cookie}
  next: check_if_authorized 

check_if_authorized:
  template: templates/permissions/check-user-authority
  requestType: post
  headers:
    cookie: ${cookie}
  result: authority_result
  next: check_authority_result

check_authority_result:
  switch:
    - condition: ${authority_result !== "false"}
      next: check_for_parameters
  next: return_unauthorized

check_for_parameters:
  switch:
    - condition: ${incoming.params.uuid == null}
      next: return_incorrect_request

get_participant:
  call: http.post
  args:
    url: "[#CENTOPS_RESQL]:[#CENTOPS_RESQL_PORT]/get-participant-by-id"
    body:
      unique_identifier: ${incoming.params.uuid}
  result: participant_result

assign_variables:
  assign:
    id: ${participant_result.response.body[0].id}
    institution_id: ${participant_result.response.body[0].institutionId}
    unique_identifier: ${incoming.params.uuid}
    participant_status: 'deleted'
    participant_type: ${participant_result.response.body[0].participantType}
    info: ${participant_result.response.body[0].info}

delete_participant:
  call: http.post
  args:
    url: "[#CENTOPS_RESQL]:[#CENTOPS_RESQL_PORT]/update-participant"
    body:
      id: ${id}
      institution_id: ${institution_id}
      participant_type: ${participant_type}
      participant_status: ${participant_status}
      unique_identifier: ${unique_identifier}
      info: ${info}
  result: delete_result

return_ok:
  wrapper: false
  status: 204
  return: "deleted successfully"
  next: end

return_incorrect_request:
  status: 400
  return: "error: incorrect request"
  next: end

return_unauthorized:
  return: "error: unauthorized"
  status: 401
  next: end
