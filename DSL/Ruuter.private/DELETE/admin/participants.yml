# TODO uncomment lines 2-5, use actual cookie from header for authentication.
# check_for_cookie:
#   switch:
#     - condition: ${incoming.headers == null || incoming.headers.cookie == null}
#       next: return_unauthorized

authenticate:
  template: templates/permissions/admin
  requestType: post
  headers:
    cookie: cookie #${incoming.headers.cookie}
  result: permission

validate_permission:
  switch:
    - condition: ${permission}
      next: check_for_parameters
  next: return_unauthorized

check_for_parameters:
  switch:
    - condition: ${incoming.params.uuid == null}
      next: return_incorrect_request

get_participant:
  call: http.post
  args:
    url: http://resql:8052/get-participant-by-id
    body:
      unique_identifier: ${incoming.params.uuid}
  result: participant_result

assign_variables:
  assign:
    id: ${participant_result.response.body[0].id}
    institution_id: ${participant_result.response.body[0].institutionId}
    unique_identifier: ${incoming.params.uuid}
    participant_status: 'deleted'
    participant_type: ${participant_result.response.body[0].participantType}
    info: ${participant_result.response.body[0].info}

delete_participant:
  call: http.post
  args:
    url: http://resql:8052/update-participant
    body:
      id: ${id}
      institution_id: ${institution_id}
      participant_type: ${participant_type}
      participant_status: ${participant_status}
      unique_identifier: ${unique_identifier}
      info: ${info}
  result: delete_result

return_ok:
  wrapper: false
  status: 204
  return: "deleted successfully"
  next: end

return_incorrect_request:
  status: 400
  return: "error: incorrect request"
  next: end

return_unauthorized:
  return: "error: unauthorized"
  status: 401
  next: end
