# check_for_cookie:
#   switch:
#     - condition: ${incoming.headers == null || incoming.headers.cookie == null}
#       next: return_unauthorized

authenticate:
  template: templates/permissions/admin
  requestType: post
  headers:
    cookie: cookie #${incoming.headers.cookie}
  result: permission

validate_permission:
  switch:
    - condition: ${permission == null}
      next: return_unauthorized

check_body:
  switch:
    - condition: ${incoming.body == null || incoming.body.email == null || incoming.body.name == null}
      next: return_incorrect_request

set_values:
  assign:
    email: ${incoming.body.email}
    name: ${incoming.body.name}

create_institution:
  call: http.post
  args:
    url: http://resql:8052/create-institution
    body:
      contact_email: ${email}
      name: ${name}
  result: institution

return_success:
  status: 200
  return: "Institution saved successfully"
  next: end

return_incorrect_request:
  status: 400
  return: "Missing required parameters"
  next: end

return_unauthorized:
  return: "error: unauthorized"
  status: 401
  next: end
